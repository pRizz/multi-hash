{"version":3,"sources":["HashInfoBox.js","App.js","serviceWorker.js","index.js"],"names":["HashInfoBox","props","textOrBuffer","textOrValueToHash","hashingFunctionAsync","hashingFunctionName","React","useState","hashText","setHashText","textThatWasHashed","setTextThatWasHashed","helperText","setHelperText","bufferToHash","TextEncoder","encode","hashingStartDate","performance","now","then","hash","hashingEndDate","duration","byteCount","hashDurationText","toLocaleString","undefined","maximumFractionDigits","nsPerByteText","makeHashDurationText","length","key","style","marginTop","marginBottom","TextField","id","label","multiline","rows","value","variant","fullWidth","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","onFilterValueChange","classes","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","event","currentTarget","aria-controls","aria-haspopup","className","AppBar","Toolbar","edge","Typography","noWrap","InputBase","placeholder","root","input","inputProps","onChange","target","byteFormatterList","map","byteArgs","minValue","Math","pow","prefix","formatBytes","numberOfBytes","byteFormat","hashToHex","buffer","hexCodes","view","DataView","i","byteLength","paddedValue","getUint32","toString","slice","push","join","hashFunctionProps","crypto","subtle","digest","Promise","resolve","blake2bHex","md5","App","textToHash","setTextToHash","textToHashHelperText","setTextToHashHelperText","filterText","setFilterText","CssBaseline","Container","maxWidth","str","s","code","charCodeAt","filter","hashFunctionProp","toLowerCase","includes","hashInfos","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b4d2df87.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport TextField from '@material-ui/core/TextField'\n\nfunction bufferFromTextOrBuffer(textOrBuffer) {\n  const buffer = new TextEncoder('utf-8').encode(textOrBuffer)\n  // FIXME\n  return buffer\n}\n\nfunction makeHashDurationText(duration, byteCount) {\n  const hashDurationText = duration.toLocaleString(undefined, {\n    maximumFractionDigits: 3\n  })\n  const nsPerByte = duration / byteCount * 1000000\n  const nsPerByteText = nsPerByte.toLocaleString(undefined, {\n    maximumFractionDigits: 3\n  })\n  return `Took ${hashDurationText} ms; ${nsPerByteText} ns/byte`\n}\n\nexport function HashInfoBox(props) {\n  const {textOrValueToHash, hashingFunctionAsync, hashingFunctionName} = props\n\n  const [hashText, setHashText] = React.useState(\"\")\n  const [textThatWasHashed, setTextThatWasHashed] = React.useState(\"\")\n  const [helperText, setHelperText] = React.useState(\"\")\n  const bufferToHash = bufferFromTextOrBuffer(textOrValueToHash)\n\n  if(textOrValueToHash !== textThatWasHashed) {\n    setTextThatWasHashed(textOrValueToHash)\n    const hashingStartDate = performance.now()\n    hashingFunctionAsync(bufferToHash).then((hash) => {\n      const hashingEndDate = performance.now()\n      const hashDuration = hashingEndDate - hashingStartDate\n      setHelperText(makeHashDurationText(hashDuration, bufferToHash.length))\n      setHashText(hash)\n    })\n  }\n\n  return (\n    <div key={hashingFunctionName} style={{marginTop: '2em', marginBottom: '2em'}}>\n      <TextField\n        id=\"outlined-multiline-static\"\n        label={hashingFunctionName}\n        multiline\n        rows=\"4\"\n        value={hashText}\n        variant=\"outlined\"\n        helperText={helperText}\n        fullWidth\n      />\n    </div>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container'\nimport TextField from '@material-ui/core/TextField'\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport {HashInfoBox} from './HashInfoBox'\nimport {blake2bHex} from 'blakejs'\nimport md5 from 'md5'\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nfunction PrimarySearchAppBar(props) {\n  const {onFilterValueChange} = props\n\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null)\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon />\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon />\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle />\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Multi Hash\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <FilterListIcon />\n            </div>\n            <InputBase\n              placeholder=\"Filter (sha, blake, etc.)\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'filter-list' }}\n              onChange={event => {onFilterValueChange(event.target.value)}}\n            />\n          </div>\n          <div className={classes.grow} />\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n\n// https://en.wikipedia.org/wiki/Orders_of_magnitude_(data)\n// [1000^value, prefix]\nconst byteFormatterList = [\n  [8, 'Y'],\n  [7, 'Z'],\n  [6, 'E'],\n  [5, 'P'],\n  [4, 'T'],\n  [3, 'G'],\n  [2, 'M'],\n  [1, 'k'],\n].map((byteArgs) => {\n  return {\n    minValue: Math.pow(1000, byteArgs[0]),\n    prefix: byteArgs[1]\n  }\n})\n\n// https://en.wikipedia.org/wiki/Orders_of_magnitude_(data)\n// converts the input (number of bytes) to a human readable number, like 500 bytes or 3.5 MB\nfunction formatBytes(numberOfBytes) {\n  for(const byteFormat of byteFormatterList) {\n    if(numberOfBytes >= byteFormat.minValue) {\n      return `${(numberOfBytes / byteFormat.minValue).toLocaleString(undefined, {\n        maximumFractionDigits: 3\n      })} ${byteFormat.prefix}B`\n    }\n  }\n  return `${numberOfBytes} bytes`\n}\n\n// from https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\nfunction hashToHex(buffer) {\n  const hexCodes = []\n  const view = new DataView(buffer)\n\n  for(let i = 0; i < view.byteLength; i += 4) {\n    const value = view.getUint32(i)\n    const stringValue = value.toString(16)\n    const padding = '00000000'\n    const paddedValue = (padding + stringValue).slice(-padding.length)\n    hexCodes.push(paddedValue)\n  }\n\n  return hexCodes.join('')\n}\n\n// from https://jsperf.com/utf-8-byte-length\n// returns the byte length of a utf8 string\nfunction byteLength(str) {\n  let s = str.length\n  for (let i = str.length - 1; i >= 0; i--) {\n    const code = str.charCodeAt(i)\n    if (code > 0x7f && code <= 0x7ff) s++\n    else if (code > 0x7ff && code <= 0xffff) s+=2\n  }\n  return s;\n}\n\nconst hashFunctionProps = [\n  {\n    hashingFunctionName: \"SHA-1\",\n    hashingFunctionAsync: (bufferToHash) => {\n      return crypto.subtle.digest('SHA-1', bufferToHash).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'SHA-256',\n    hashingFunctionAsync: (buffer) => {\n      return crypto.subtle.digest('SHA-256', buffer).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'SHA-384',\n    hashingFunctionAsync: function(buffer) {\n      return crypto.subtle.digest('SHA-384', buffer).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'SHA-512',\n    hashingFunctionAsync: function(buffer) {\n      return crypto.subtle.digest('SHA-512', buffer).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'blake2b',\n    hashingFunctionAsync: function(buffer) {\n      return new Promise((resolve) => {\n        resolve(blake2bHex(buffer, null, 64))\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'md5',\n    hashingFunctionAsync: function(buffer) {\n      return new Promise((resolve) => {\n        resolve(md5(buffer))\n      })\n    }\n  },\n]\n\nfunction hashInfos(textToHash, filterText) {\n  return hashFunctionProps.filter((hashFunctionProp) => {\n    if(!filterText) {\n      return true\n    }\n    return hashFunctionProp.hashingFunctionName.toLowerCase().includes(filterText.toLowerCase())\n  }).map(hashFunctionProp => {\n    return <HashInfoBox\n      key={hashFunctionProp.hashingFunctionName}\n      textOrValueToHash={textToHash}\n      {...hashFunctionProp} />\n  })\n}\n\nfunction App() {\n  const [textToHash, setTextToHash] = React.useState(\"\")\n  const [textToHashHelperText, setTextToHashHelperText] = React.useState(formatBytes(0))\n  const [filterText, setFilterText] = React.useState(\"\")\n  const handleTextChange = event => {\n    setTextToHash(event.target.value)\n    setTextToHashHelperText(formatBytes(byteLength(event.target.value)))\n  }\n  const handleFilterValueChange = (filterText) => {\n    setFilterText(filterText)\n  }\n\n  return (\n    <div className=\"App\">\n      <CssBaseline />\n      <PrimarySearchAppBar onFilterValueChange={handleFilterValueChange} />\n      <Container maxWidth=\"md\">\n        <br/>\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Text To Hash\"\n          multiline\n          rows=\"4\"\n          value={textToHash}\n          onChange={handleTextChange}\n          variant=\"outlined\"\n          helperText={textToHashHelperText}\n          fullWidth\n        />\n        <h2>\n          Or\n        </h2>\n        <h2>\n          File Input\n        </h2>\n        {hashInfos(textToHash, filterText)}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}