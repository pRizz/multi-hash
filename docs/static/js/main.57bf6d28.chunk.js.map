{"version":3,"sources":["App.js","HashInfoBox.js","HashFunctionDefinitions.js","HashWorker.worker.js","Stats.js","serviceWorker.js","index.js"],"names":["Alert","props","elevation","variant","hashWorker","HashWorker","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","onFilterValueChange","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleMobileMenuClose","handleMenuClose","renderMenu","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","onClick","renderMobileMenu","aria-label","badgeContent","event","currentTarget","aria-controls","aria-haspopup","className","edge","noWrap","placeholder","root","input","inputProps","onChange","target","value","href","rel","button","startIcon","style","byteFormatterList","map","byteArgs","minValue","Math","pow","prefix","formatBytes","numberOfBytes","byteFormat","toLocaleString","undefined","maximumFractionDigits","byteLength","str","s","length","i","code","charCodeAt","randomDataModels","name","byteCount","HashRandomDataButtons","onDataToHash","flexWrap","randomDataModel","key","margin","bufferToHash","Buffer","alloc","HashInfos","filterText","onHashInfoData","hashFunctionProps","filter","hashFunctionProp","hashingFunctionName","toLowerCase","includes","index","worker","hashDefinitionIndex","hasWorkerListener","OrBreak","App","textToHash","setTextToHash","setBufferToHash","textToHashHelperText","setTextToHashHelperText","setFilterText","fileToHashHelperText","setFileToHashHelperText","jobQueueCount","setJobQueueCount","statsData","setStatsData","statsDescription","setStatsDescription","hashDoneSnackbarOpen","setHashDoneSnackbarOpen","addEventListener","e","data","isLoading","handleHashDoneSnackarClose","maxWidth","label","multiline","rows","text","from","TextEncoder","encode","bufferFromText","byteCountFormatted","helperText","fullWidth","onDrop","acceptedFiles","forEach","file","reader","FileReader","onload","fileInfo","fileBuffer","fileName","console","log","handleFileChange","result","readAsArrayBuffer","getRootProps","getInputProps","border","borderColor","fontSize","paddingTop","icon","clickable","marginTop","marginBottom","dataBuffer","hashInfoData","currentHashInfoRow","findIndex","obj","push","splice","autoHideDuration","severity","HashInfoBox","hashText","setHashText","setHasWorkerListener","willHashBuffer","setWillHashBuffer","didHashBuffer","setDidHashBuffer","bufferThatWasHashed","setBufferThatWasHashed","setHelperText","postMessage","workerData","metrics","durationMS","seconds","metricsFromInfo","hashDuration","hashDurationText","durationSeconds","MBperSecond","nsPerByte","nsPerByteText","MBperSecondText","textFromMetrics","hash","alignSelf","flexDirection","hashToHex","buffer","hexCodes","view","DataView","paddedValue","getUint32","toString","slice","join","hashingFunctionAsync","crypto","subtle","digest","then","module","exports","Worker","chartConfigs","dataKey","ChartComponentsFromChartProps","chartProps","chartProp","zIndex","chartData","top","right","left","bottom","strokeDasharray","fill","Stats","statsProps","chartConfig","statsProp","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.57bf6d28.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container'\nimport TextField from '@material-ui/core/TextField'\n\nimport {fade, makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport {HashInfoBox} from './HashInfoBox'\nimport Dropzone from 'react-dropzone'\nimport {hashFunctionProps} from './HashFunctionDefinitions'\nimport HashWorker from './HashWorker.worker'\nimport Button from '@material-ui/core/Button'\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Stats from './Stats'\nimport {CircularProgress} from '@material-ui/core'\nimport Chip from '@material-ui/core/Chip'\nimport DescriptionIcon from '@material-ui/icons/Description'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n}\n\nconst hashWorker = new HashWorker() // FIXME: put in component mounted?\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nfunction PrimarySearchAppBar(props) {\n  const {onFilterValueChange} = props\n\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState(null)\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null)\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const handleProfileMenuOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = event => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n      id={menuId}\n      keepMounted\n      transformOrigin={{vertical: 'top', horizontal: 'right'}}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n    </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n    <Menu\n      anchorEl={mobileMoreAnchorEl}\n      anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n      id={mobileMenuId}\n      keepMounted\n      transformOrigin={{vertical: 'top', horizontal: 'right'}}\n      open={isMobileMenuOpen}\n      onClose={handleMobileMenuClose}\n    >\n      <MenuItem>\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n          <Badge badgeContent={4} color=\"secondary\">\n            <MailIcon/>\n          </Badge>\n        </IconButton>\n        <p>Messages</p>\n      </MenuItem>\n      <MenuItem>\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n          <Badge badgeContent={11} color=\"secondary\">\n            <NotificationsIcon/>\n          </Badge>\n        </IconButton>\n        <p>Notifications</p>\n      </MenuItem>\n      <MenuItem onClick={handleProfileMenuOpen}>\n        <IconButton\n          aria-label=\"account of current user\"\n          aria-controls=\"primary-search-account-menu\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n        >\n          <AccountCircle/>\n        </IconButton>\n        <p>Profile</p>\n      </MenuItem>\n    </Menu>\n  );\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon/>\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Multi Hash\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <FilterListIcon/>\n            </div>\n            <InputBase\n              placeholder=\"Filter (sha, blake, etc.)\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{'aria-label': 'filter-list'}}\n              onChange={event => {\n                onFilterValueChange(event.target.value)\n              }}\n            />\n          </div>\n          <div className={classes.grow}/>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon/>\n            </IconButton>\n          </div>\n          <Button\n            href=\"https://github.com/pRizz/multi-hash\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            variant=\"contained\"\n            className={classes.button}\n            startIcon={<GitHubIcon/>}\n          >\n            Source Code\n          </Button>\n          <div style={{width: 12}}></div>\n          <Button\n            href=\"https://www.prizzventuresllc.com/\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            variant=\"contained\"\n            className={classes.button}\n          >\n            P Rizz Ventures\n          </Button>\n        </Toolbar>\n      </AppBar>\n      {renderMobileMenu}\n      {renderMenu}\n    </div>\n  );\n}\n\n// https://en.wikipedia.org/wiki/Orders_of_magnitude_(data)\n// [1000^value, prefix]\nconst byteFormatterList = [\n  [8, 'Y'],\n  [7, 'Z'],\n  [6, 'E'],\n  [5, 'P'],\n  [4, 'T'],\n  [3, 'G'],\n  [2, 'M'],\n  [1, 'k'],\n].map((byteArgs) => {\n  return {\n    minValue: Math.pow(1000, byteArgs[0]),\n    prefix: byteArgs[1]\n  }\n})\n\n// https://en.wikipedia.org/wiki/Orders_of_magnitude_(data)\n// converts the input (number of bytes) to a human readable number, like 500 bytes or 3.5 MB\nfunction formatBytes(numberOfBytes) {\n  for (const byteFormat of byteFormatterList) {\n    if (numberOfBytes >= byteFormat.minValue) {\n      return `${(numberOfBytes / byteFormat.minValue).toLocaleString(undefined, {\n        maximumFractionDigits: 3\n      })} ${byteFormat.prefix}B`\n    }\n  }\n  return `${numberOfBytes} bytes`\n}\n\n// from https://jsperf.com/utf-8-byte-length\n// returns the byte length of a utf8 string\nfunction byteLength(str) {\n  let s = str.length\n  for (let i = str.length - 1; i >= 0; i--) {\n    const code = str.charCodeAt(i)\n    if (code > 0x7f && code <= 0x7ff) s++\n    else if (code > 0x7ff && code <= 0xffff) s += 2\n  }\n  return s;\n}\n\nconst randomDataModels = [\n  {\n    name: \"10 KB\",\n    byteCount: 1000 * 10\n  },\n  {\n    name: \"100 KB\",\n    byteCount: 100 * 1000\n  },\n  {\n    name: \"1 MB\",\n    byteCount: 1000 * 1000\n  },\n  {\n    name: \"10 MB\",\n    byteCount: 10 * 1000 * 1000\n  },\n  {\n    name: \"100 MB\",\n    byteCount: 100 * 1000 * 1000\n  },\n  {\n    name: \"500 MB (slow)\",\n    byteCount: 500 * 1000 * 1000\n  },\n  {\n    name: \"1 GB (slow)\",\n    byteCount: 1000 * 1000 * 1000\n  }\n]\n\nfunction generateRandomData(byteCount) {\n  return Buffer.alloc(byteCount)\n}\n\nfunction HashRandomDataButtons(props) {\n  const {onDataToHash} = props\n\n  return (\n    <section style={{display: 'flex', justifyContent: 'center', flexWrap: 'wrap'}}>\n      {randomDataModels.map((randomDataModel) => {\n        return <Button\n          variant={'contained'}\n          color={'primary'}\n          key={randomDataModel.name}\n          style={{margin: 8}}\n          onClick={() => {\n            const bufferToHash = generateRandomData(randomDataModel.byteCount)\n            onDataToHash(bufferToHash)\n          }}\n        >\n          {randomDataModel.name}\n        </Button>\n      })}\n    </section>\n  )\n}\n\nfunction HashInfos(props) {\n  const {bufferToHash, filterText, onHashInfoData} = props\n\n  return (\n    hashFunctionProps.filter((hashFunctionProp) => {\n      if (!filterText) {\n        return true\n      }\n      return hashFunctionProp.hashingFunctionName.toLowerCase().includes(filterText.toLowerCase())\n    }).map((hashFunctionProp, index) => {\n      return <HashInfoBox\n        key={hashFunctionProp.hashingFunctionName}\n        bufferToHash={bufferToHash}\n        worker={hashWorker}\n        hashDefinitionIndex={index}\n        onHashInfoData={onHashInfoData}\n        {...hashFunctionProp} />\n    })\n  )\n}\n\nfunction bufferFromText(text) {\n  return Buffer.from(new TextEncoder().encode(text))\n}\n\nlet hasWorkerListener = false\n\nfunction OrBreak() {\n  return (\n    <Typography variant={'h5'} style={{margin: 20}}>\n      Or\n    </Typography>\n  )\n}\n\nfunction App() {\n  const [textToHash, setTextToHash] = React.useState(\"\")\n  const [bufferToHash, setBufferToHash] = React.useState(Buffer.alloc(0))\n  const [textToHashHelperText, setTextToHashHelperText] = React.useState(formatBytes(0))\n  const [filterText, setFilterText] = React.useState(\"\")\n  const [fileToHashHelperText, setFileToHashHelperText] = React.useState(\"\")\n  const [jobQueueCount, setJobQueueCount] = React.useState(0)\n  const [statsData, setStatsData] = React.useState([])\n  const [statsDescription, setStatsDescription] = React.useState(\"\")\n  const [hashDoneSnackbarOpen, setHashDoneSnackbarOpen] = React.useState(false)\n\n  if (!hasWorkerListener) {\n    hasWorkerListener = true\n    hashWorker.addEventListener('message', (e) => {\n      const {jobQueueCount} = e.data\n      if (jobQueueCount !== undefined) {\n        setHashDoneSnackbarOpen(jobQueueCount === 0)\n        setJobQueueCount(jobQueueCount)\n      }\n    })\n  }\n\n  const handleTextChange = event => {\n    const text = event.target.value\n    setTextToHash(text)\n    setBufferToHash(bufferFromText(text))\n    const byteCountFormatted = formatBytes(byteLength(text))\n    setTextToHashHelperText(byteCountFormatted)\n    setStatsDescription(`${formatBytes(byteLength(text))} of text`)\n  }\n  const handleFilterValueChange = (filterText) => {\n    setFilterText(filterText)\n  }\n\n  const handleFileChange = fileInfo => {\n    const {fileBuffer, fileName} = fileInfo\n    console.log('handleFileChange')\n    console.log(fileBuffer)\n    console.log(fileBuffer.byteLength)\n    setBufferToHash(Buffer.from(fileBuffer))\n    setFileToHashHelperText(`${fileName}: ${formatBytes(fileBuffer.byteLength)}`)\n    setStatsDescription(`${formatBytes(fileBuffer.byteLength)} of a file`)\n  }\n\n  /**\n   * hashInfoData: {\n   *   hashingFunctionName: \"sha1\",\n   *   \"duration (s)\": 12,\n   *   etc...\n   * }\n   */\n\n  const handleHashInfoData = (hashInfoData) => {\n    const currentHashInfoRow = statsData.findIndex((value, index, obj) => {\n      return value.hashingFunctionName === hashInfoData.hashingFunctionName\n    })\n    if (currentHashInfoRow < 0) {\n      statsData.push(hashInfoData)\n      return\n    }\n    statsData.splice(currentHashInfoRow, 1, hashInfoData)\n    setStatsData(statsData)\n  }\n\n  const handleRandomDataToHash = (dataBuffer) => {\n    setBufferToHash(dataBuffer)\n    setStatsDescription(`${formatBytes(dataBuffer.byteLength)} of random data`)\n  }\n\n  const isLoading = jobQueueCount > 0\n\n  const handleHashDoneSnackarClose = () => {\n    setHashDoneSnackbarOpen(false)\n  }\n\n  return (\n    <div className=\"App\">\n      <CssBaseline/>\n      <PrimarySearchAppBar onFilterValueChange={handleFilterValueChange}/>\n      <Container maxWidth=\"md\">\n        <br/>\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Text To Hash\"\n          multiline\n          rows=\"4\"\n          value={textToHash}\n          onChange={handleTextChange}\n          variant=\"outlined\"\n          helperText={textToHashHelperText}\n          fullWidth\n        />\n\n        <OrBreak/>\n\n        <Dropzone onDrop={(acceptedFiles) => {\n          acceptedFiles.forEach((file) => {\n            const reader = new FileReader()\n            reader.onload = () => {\n              handleFileChange({\n                fileBuffer: reader.result,\n                fileName: file.name\n              })\n            }\n            reader.readAsArrayBuffer(file)\n          })\n        }}>\n          {({getRootProps, getInputProps}) => (\n            <section style={{border: 'dashed gray', borderColor: (fileToHashHelperText ? 'blue' : 'gray')}}>\n              <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                <p style={{fontSize: 30, paddingTop: 50, margin: 0}}>Drag 'n' drop a file here, or click to select a\n                  file</p>\n                <p style={{fontSize: 30, margin: 4}}>(hashing is done locally)</p>\n                {fileToHashHelperText && <Chip\n                  icon={<DescriptionIcon></DescriptionIcon>}\n                  label={fileToHashHelperText}\n                  clickable\n                  color=\"primary\"\n                  style={{marginTop: 20}}\n                />}\n                <div style={{marginBottom: 50}}></div>\n              </div>\n            </section>\n          )}\n        </Dropzone>\n\n        <OrBreak/>\n\n        <Typography variant={'h5'}>\n          Random Data\n        </Typography>\n\n        <HashRandomDataButtons onDataToHash={handleRandomDataToHash}/>\n\n        <div style={{height: '3em'}}/>\n\n        <Typography variant={'h3'}>\n          Hash job queue count: {jobQueueCount}\n        </Typography>\n        {isLoading && <CircularProgress/>}\n\n        <HashInfos bufferToHash={bufferToHash}\n                   filterText={filterText}\n                   onHashInfoData={handleHashInfoData}\n        />\n\n        <Stats\n          statsDescription={statsDescription}\n          data={statsData}\n          isLoading={isLoading}\n        />\n\n        <Snackbar open={hashDoneSnackbarOpen} autoHideDuration={3000} onClose={handleHashDoneSnackarClose}>\n          <Alert onClose={handleHashDoneSnackarClose} severity=\"success\">\n            Done hashing!\n          </Alert>\n        </Snackbar>\n\n      </Container>\n      <div>\n        Footer TODO\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport './App.css';\nimport TextField from '@material-ui/core/TextField'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nfunction metricsFromInfo(durationMS, byteCount) {\n  const nanoseconds = durationMS * 1000000\n  const nsPerByte = nanoseconds / byteCount\n  const megabytes = byteCount / 1000000\n  const seconds = durationMS / 1000\n  const MBperSecond = megabytes / seconds\n\n  return {\n    \"duration (s)\": seconds,\n    \"MB/s\": MBperSecond,\n    \"ns/byte\": nsPerByte\n  }\n}\n\nfunction textFromMetrics(metrics) {\n  const durationSeconds = metrics[\"duration (s)\"]\n  const MBperSecond = metrics[\"MB/s\"]\n  const nsPerByte = metrics[\"ns/byte\"]\n\n  const hashDurationText = (durationSeconds * 1000).toLocaleString(undefined, {\n    maximumFractionDigits: 3\n  })\n  const nsPerByteText = nsPerByte.toLocaleString(undefined, {\n    maximumFractionDigits: 3\n  })\n  const MBperSecondText = MBperSecond.toLocaleString(undefined, {\n    maximumFractionDigits: 3\n  })\n  return `Took ${hashDurationText} ms | ${nsPerByteText} ns/byte | ${MBperSecondText}MB/s`\n}\n\nexport function HashInfoBox(props) {\n  const {bufferToHash, hashingFunctionName, worker, hashDefinitionIndex, onHashInfoData} = props\n\n  const [hashText, setHashText] = React.useState(\"\")\n  const [hasWorkerListener, setHasWorkerListener] = React.useState(false)\n\n  const [willHashBuffer, setWillHashBuffer] = React.useState(\"\")\n  const [didHashBuffer, setDidHashBuffer] = React.useState(\"\")\n\n  const [bufferThatWasHashed, setBufferThatWasHashed] = React.useState(null)\n  const [helperText, setHelperText] = React.useState(\"\")\n\n  if(bufferThatWasHashed === null\n  || bufferThatWasHashed.length !== bufferToHash.length) {\n    setBufferThatWasHashed(bufferToHash)\n    setWillHashBuffer(bufferToHash)\n    worker.postMessage({\n      hashDefinitionIndex,\n      bufferToHash,\n      hashingFunctionName\n    })\n    if(!hasWorkerListener) {\n      setHasWorkerListener(true)\n      worker.addEventListener('message', e => {\n        const workerData = e.data\n\n        if(workerData.hashingFunctionName !== hashingFunctionName) {\n          return\n        }\n\n        const metrics = metricsFromInfo(workerData.hashDuration, workerData.bufferToHash.length)\n        const hashDurationText = textFromMetrics(metrics)\n        setHashText(workerData.hash)\n        setDidHashBuffer(workerData.bufferToHash)\n        setHelperText(hashDurationText)\n\n        onHashInfoData({\n          hashingFunctionName,\n          ...metrics\n        })\n      })\n    }\n  }\n\n  const isLoading = willHashBuffer.length !== didHashBuffer.length // FIXME; compare buffers\n\n  return (\n    <div key={hashingFunctionName} style={{marginTop: '2em', marginBottom: '2em', position: 'relative'}}>\n      {isLoading && <div style={{position: 'absolute', justifyContent: 'center', width: '100%', height: '100%'}}>\n        <CircularProgress style={{alignSelf: 'center', alignItems: 'center', display: 'flex', flexDirection: 'column', justifyContent: 'center', flexGrow: 1, margin: 'auto', height: '100%'}} />\n      </div>}\n      <TextField\n        id=\"outlined-multiline-static\"\n        label={hashingFunctionName}\n        multiline\n        rows=\"4\"\n        value={hashText}\n        variant=\"outlined\"\n        helperText={helperText}\n        fullWidth\n        style={{position: 'relative'}}\n      />\n    </div>\n  )\n}\n","import {blake2bHex} from 'blakejs'\nimport md5 from 'md5'\n\n// from https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\nfunction hashToHex(buffer) {\n  const hexCodes = []\n  const view = new DataView(buffer)\n\n  for (let i = 0; i < view.byteLength; i += 4) {\n    const value = view.getUint32(i)\n    const stringValue = value.toString(16)\n    const padding = '00000000'\n    const paddedValue = (padding + stringValue).slice(-padding.length)\n    hexCodes.push(paddedValue)\n  }\n\n  return hexCodes.join('')\n}\n\nexport const hashFunctionProps = [\n  {\n    hashingFunctionName: \"SHA-1\",\n    hashingFunctionAsync: (bufferToHash) => {\n      return crypto.subtle.digest('SHA-1', bufferToHash).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'SHA-256',\n    hashingFunctionAsync: (buffer) => {\n      return crypto.subtle.digest('SHA-256', buffer).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'SHA-384',\n    hashingFunctionAsync: function (buffer) {\n      return crypto.subtle.digest('SHA-384', buffer).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'SHA-512',\n    hashingFunctionAsync: function (buffer) {\n      return crypto.subtle.digest('SHA-512', buffer).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  // {\n  //   hashingFunctionName: 'blake2b',\n  //   hashingFunctionAsync: function (buffer) {\n  //     return new Promise((resolve) => {\n  //       resolve(blake2bHex(buffer, null, 64))\n  //     })\n  //   }\n  // },\n  // {\n  //   hashingFunctionName: 'md5',\n  //   hashingFunctionAsync: function (buffer) {\n  //     return new Promise((resolve) => {\n  //       resolve(md5(buffer))\n  //     })\n  //   }\n  // },\n]\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"2edacf457f7419de02cb.worker.js\");\n};","import React from 'react'\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Typography from '@material-ui/core/Typography'\n\nconst chartConfigs = [\n  {\n    name: \"Duration (lower is better)\",\n    dataKey: \"duration (s)\"\n  },\n  {\n    name: \"Throughput (higher is better)\",\n    dataKey: \"MB/s\"\n  },\n  {\n    name: \"Throughput Inverse (lower is better)\",\n    dataKey: \"ns/byte\"\n  }\n]\n\nfunction chartPropsFromStatsProps(statsProps) {\n  return chartConfigs.map(chartConfig => {\n    const {name, dataKey} = chartConfig\n    const chartData = statsProps.filter(statsProp => {\n      return !!statsProp[dataKey]\n    }).map(statsProp => {\n      return {\n        \"Hashing Function\": statsProp.hashingFunctionName,\n        [dataKey]: statsProp[dataKey]\n      }\n    })\n    return {\n      name,\n      dataKey,\n      chartData\n    }\n  })\n}\n\nfunction ChartComponentsFromChartProps(props) {\n  const {chartProps, isLoading} = props\n  return chartProps.map(chartProp => {\n    return (\n      <div key={chartProp.name} style={{display: 'flex', flexDirection: 'column', alignItems: 'center', position: 'relative', margin: 12}}>\n        {isLoading && <div style={{position: 'absolute', justifyContent: 'center', width: '100%', height: '100%', backgroundColor: \"rgba(128, 128, 128, 0.1)\", zIndex: 10}}>\n          <CircularProgress\n            color={'secondary'}\n            style={{alignSelf: 'center', alignItems: 'center', display: 'flex', flexDirection: 'column', justifyContent: 'center', flexGrow: 1, margin: 'auto', height: '100%'}} />\n        </div>}\n\n        <Typography variant=\"h4\">\n          {chartProp.name}\n        </Typography>\n        <BarChart\n          width={500}\n          height={300}\n          data={chartProp.chartData}\n          margin={{\n            top: 5, right: 5, left: 5, bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\"/>\n          <XAxis dataKey=\"Hashing Function\"/>\n          <YAxis/>\n          <Tooltip/>\n          <Legend/>\n          <Bar dataKey={chartProp.dataKey} fill=\"#8884d8\"/>\n        </BarChart>\n      </div>\n    )\n  })\n}\n\n/**\n * props: {\n *   data: [\n *     {\n *       hashingFunctionName: 'sha-1',\n *         \"duration (s)\": 12,\n *         \"MB/s\": 230,\n *         etc.\n *     }, ...\n *   ]\n * }\n * */\nexport default function Stats(props) {\n  const {data, statsDescription, isLoading} = props\n  const chartProps = chartPropsFromStatsProps(data)\n\n  return (\n    <section>\n      <Typography variant=\"h2\">\n        Stats for hashing {statsDescription || 'null value'}\n      </Typography>\n\n      <ChartComponentsFromChartProps chartProps={chartProps} isLoading={isLoading}/>\n    </section>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}