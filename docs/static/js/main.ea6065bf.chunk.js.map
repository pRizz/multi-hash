{"version":3,"sources":["App.js","HashInfoBox.js","HashFunctionDefinitions.js","HashWorker.worker.js","Stats.js","MBToHashInput.js","Util.js","serviceWorker.js","index.js"],"names":["Alert","props","elevation","variant","hashWorker","HashWorker","useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","tipCode","color","overflowWrap","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","sectionDesktop","footerColumn","flex","flexDirection","flexBasis","minWidth","Footer","classes","style","paddingTop","paddingBottom","flexWrap","className","href","target","rel","button","startIcon","PRizzTipAddresses","IOTA","NANO","BANANO","ETH","BTC","PrimarySearchAppBar","onFilterValueChange","edge","aria-label","noWrap","placeholder","root","input","inputProps","onChange","event","value","icon","faNpm","byteLength","str","s","length","i","code","charCodeAt","randomDataModels","name","byteCount","HashRandomDataButtons","onDataToHash","map","randomDataModel","key","margin","onClick","HashInfos","bufferToHash","filterText","onHashInfoData","hashFunctionProps","filter","hashFunctionProp","hashingFunctionName","toLowerCase","includes","index","worker","hashDefinitionIndex","hasWorkerListener","OrBreak","App","React","useState","textToHash","setTextToHash","Buffer","alloc","setBufferToHash","formatBytes","textToHashHelperText","setTextToHashHelperText","setFilterText","fileToHashHelperText","setFileToHashHelperText","jobQueueCount","setJobQueueCount","statsData","setStatsData","statsDescription","setStatsDescription","hashDoneSnackbarOpen","setHashDoneSnackbarOpen","waitingForRandomData","setWaitingForRandomData","addEventListener","e","data","type","opts","buffer","console","log","handleRandomDataToHash","handleRandomData","undefined","dataBuffer","isLoading","handleHashDoneSnackbarClose","handleRandomDataButtonPressed","postMessage","hashesTitle","maxWidth","id","label","multiline","rows","text","from","TextEncoder","encode","bufferFromText","byteCountFormatted","helperText","fullWidth","onDrop","acceptedFiles","forEach","file","reader","FileReader","onload","fileInfo","fileBuffer","fileName","handleFileChange","result","readAsArrayBuffer","getRootProps","getInputProps","border","borderColor","fontSize","paddingLeft","paddingRight","clickable","marginTop","textAlign","alignSelf","hashInfoData","currentHashInfoRow","findIndex","obj","push","splice","open","autoHideDuration","onClose","severity","HashInfoBox","hashText","setHashText","setHasWorkerListener","willHashBuffer","setWillHashBuffer","didHashBuffer","setDidHashBuffer","bufferThatWasHashed","setBufferThatWasHashed","setHelperText","workerData","metrics","durationMS","seconds","metricsFromInfo","hashDuration","hashDurationText","durationSeconds","MBperSecond","nsPerByte","toLocaleString","maximumFractionDigits","nsPerByteText","MBperSecondText","textFromMetrics","hash","marginBottom","multihashingBufferToArrayBuffer","multihashingBuffer","arrayBuffer","ArrayBuffer","uint8Array","Uint8Array","copy","hashToHex","hexCodes","view","DataView","paddedValue","getUint32","toString","slice","join","hashingFunctionAsync","crypto","subtle","digest","then","a","multihashing","module","exports","Worker","chartConfigs","dataKey","ChartComponentsFromChartProps","chartProps","chartProp","zIndex","chartData","layout","top","right","bottom","left","strokeDasharray","fill","Stats","statsProps","chartConfig","statsProp","MBToHashInput","NaN","mbToHash","setMBToHash","parseInt","bytesToHash","disabled","isNaN","byteFormatterList","byteArgs","minValue","Math","pow","prefix","numberOfBytes","byteFormat","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ea6065bf.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container'\nimport TextField from '@material-ui/core/TextField'\n\nimport {fade, makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport {HashInfoBox} from './HashInfoBox'\nimport Dropzone from 'react-dropzone'\nimport {hashFunctionProps} from './HashFunctionDefinitions'\nimport HashWorker from './HashWorker.worker'\nimport Button from '@material-ui/core/Button'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport Stats from './Stats'\nimport {CircularProgress, Paper} from '@material-ui/core'\nimport Chip from '@material-ui/core/Chip'\nimport DescriptionIcon from '@material-ui/icons/Description'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert';\nimport PRizzTipAddresses from 'prizz-tip-addresses'\nimport Link from '@material-ui/core/Link'\nimport {formatBytes} from './Util'\nimport {MBToHashInput} from './MBToHashInput'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faNpm} from '@fortawesome/free-brands-svg-icons'\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n}\n\nconst hashWorker = new HashWorker() // FIXME: put in component mounted?\n\nconst useStyles = makeStyles(theme => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  tipCode: {\n    color: 'blue',\n    overflowWrap: 'break-word'\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    flexGrow: 1,\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: 200,\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  footerColumn: {\n    flex: '1 1 auto',\n    flexDirection: 'column',\n    padding: 12,\n    flexBasis: 1,\n    minWidth: 400\n  }\n}))\n\nfunction Footer() {\n  const classes = useStyles()\n  return (\n    <footer style={{backgroundColor: '#F1F1FF', paddingTop: 30, paddingBottom: 30}}>\n      <Container>\n        <div style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          flexDirection: 'row',\n          justifyContent: 'space-even',\n          alignItems: 'center'\n        }}>\n          <div className={classes.footerColumn} style={{}}>\n            <Typography variant={'h6'}>\n              Multi Hash\n            </Typography>\n\n            <p>\n              Multi Hash is a webapp to quickly and easily\n              generate common hashes with simple text, file, or random data.\n            </p>\n            <p>It is a <Link\n              href={'https://developers.google.com/web/progressive-web-apps'}\n              variant=\"button\"\n              color=\"primary\"\n              target=\"_blank\"\n              rel=\"noopener\">\n              Progressive Web App (PWA)\n            </Link> that can run offline.</p>\n            <p>All hashing is done in your browser and varies based on the strength of your processing power.</p>\n            <p>It utilizes web workers for hashing to prevent the UI thread from being blocked.</p>\n            <p>It displays basic hashing stats and speeds based on your in-browser performance.</p>\n          </div>\n\n          <div className={classes.footerColumn}>\n            <p>Multi Hash was developed by\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                href=\"https://github.com/pRizz/\"\n                target=\"_blank\"\n                rel=\"noopener\"\n                className={classes.button}\n                style={{marginLeft: 12, marginRight: 12}}\n                startIcon={<GitHubIcon/>}\n              >\n                @pRizz\n              </Button>\n            </p>\n            <p>\n              You can run locally with\n            </p>\n            <pre>\n              npx multi-hash-webapp\n            </pre>\n            <p>Copyright © 2020 Peter Ryszkiewicz</p>\n            <p>Check out my other crypto projects at <Link\n              href=\"https://www.prizzventuresllc.com\"\n              variant=\"button\"\n              target=\"_blank\">www.prizzventuresllc.com</Link></p>\n            <p className={classes.footerColumn}>\n              <Link\n                href=\"https://www.prizzventuresllc.com/PrivacyPolicy.txt\"\n                variant=\"button\"\n                color=\"primary\"\n                target=\"_blank\"\n                rel=\"noopener\"\n              >Privacy Policy</Link>\n            </p>\n          </div>\n\n        </div>\n        <div>\n          <p>If you like these apps and want to support me making more, please consider tipping me at these\n            addresses:</p>\n          <div>\n            IOTA: <code className={classes.tipCode}>{PRizzTipAddresses.IOTA}</code>\n          </div>\n          <div>\n            NANO: <code className={classes.tipCode}>{PRizzTipAddresses.NANO}</code>\n          </div>\n          <div>\n            BANANO: <code className={classes.tipCode}>{PRizzTipAddresses.BANANO}</code>\n          </div>\n          <div>\n            ETH: <code className={classes.tipCode}>{PRizzTipAddresses.ETH}</code>\n          </div>\n          <div>\n            BTC: <code className={classes.tipCode}>{PRizzTipAddresses.BTC}</code>\n          </div>\n          <div>\n            Thanks for your support!\n          </div>\n        </div>\n\n      </Container>\n\n    </footer>\n  )\n}\n\nfunction PrimarySearchAppBar(props) {\n  const {onFilterValueChange} = props\n\n  const classes = useStyles()\n\n  return (\n    <div className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n          >\n            <MenuIcon/>\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Multi Hash\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <FilterListIcon/>\n            </div>\n            <InputBase\n              placeholder=\"Filter (sha, blake, etc.)\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{'aria-label': 'filter-list'}}\n              onChange={event => {\n                onFilterValueChange(event.target.value)\n              }}\n            />\n          </div>\n          <IconButton\n            href=\"https://www.npmjs.com/package/multi-hash-webapp\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            variant=\"contained\"\n            className={classes.button}\n            color=\"inherit\"\n            aria-label=\"npm package\"\n          >\n            <FontAwesomeIcon icon={faNpm}/>\n          </IconButton>\n          <IconButton\n            href=\"https://github.com/pRizz/multi-hash\"\n            target=\"_blank\"\n            rel=\"noopener\"\n            variant=\"contained\"\n            className={classes.button}\n            color=\"inherit\"\n            aria-label=\"source code\"\n          >\n            <GitHubIcon/>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n// from https://jsperf.com/utf-8-byte-length\n// returns the byte length of a utf8 string\nfunction byteLength(str) {\n  let s = str.length\n  for (let i = str.length - 1; i >= 0; i--) {\n    const code = str.charCodeAt(i)\n    if (code > 0x7f && code <= 0x7ff) s++\n    else if (code > 0x7ff && code <= 0xffff) s += 2\n  }\n  return s;\n}\n\nconst randomDataModels = [\n  {\n    name: \"10 KB\",\n    byteCount: 10 * 1e3\n  },\n  {\n    name: \"100 KB\",\n    byteCount: 100 * 1e3\n  },\n  {\n    name: \"1 MB\",\n    byteCount: 1e6\n  },\n  {\n    name: \"10 MB\",\n    byteCount: 10 * 1e6\n  },\n  {\n    name: \"100 MB\",\n    byteCount: 100 * 1e6\n  },\n  {\n    name: \"500 MB (slow)\",\n    byteCount: 500 * 1e6\n  },\n  {\n    name: \"1 GB (slow)\",\n    byteCount: 1e9\n  }\n]\n\nfunction HashRandomDataButtons(props) {\n  const {onDataToHash} = props\n\n  return (\n    <section style={{display: 'flex', justifyContent: 'center', flexWrap: 'wrap'}}>\n      {randomDataModels.map((randomDataModel) => {\n        return <Button\n          variant={'contained'}\n          color={'primary'}\n          key={randomDataModel.name}\n          style={{margin: 8}}\n          onClick={() => {\n            onDataToHash(randomDataModel.byteCount)\n          }}\n        >\n          {randomDataModel.name}\n        </Button>\n      })}\n    </section>\n  )\n}\n\nfunction HashInfos(props) {\n  const {bufferToHash, filterText, onHashInfoData} = props\n\n  return (\n    hashFunctionProps.filter((hashFunctionProp) => {\n      if (!filterText) {\n        return true\n      }\n      return hashFunctionProp.hashingFunctionName.toLowerCase().includes(filterText.toLowerCase())\n    }).map((hashFunctionProp, index) => {\n      return <HashInfoBox\n        key={hashFunctionProp.hashingFunctionName}\n        bufferToHash={bufferToHash}\n        worker={hashWorker}\n        hashDefinitionIndex={index}\n        onHashInfoData={onHashInfoData}\n        {...hashFunctionProp} />\n    })\n  )\n}\n\nfunction bufferFromText(text) {\n  return Buffer.from(new TextEncoder().encode(text))\n}\n\nlet hasWorkerListener = false\n\nfunction OrBreak() {\n  return (\n    <Typography variant={'h5'} style={{margin: 20}}>\n      Or\n    </Typography>\n  )\n}\n\nfunction App() {\n  const [textToHash, setTextToHash] = React.useState(\"\")\n  const [bufferToHash, setBufferToHash] = React.useState(Buffer.alloc(0))\n  const [textToHashHelperText, setTextToHashHelperText] = React.useState(formatBytes(0))\n  const [filterText, setFilterText] = React.useState(\"\")\n  const [fileToHashHelperText, setFileToHashHelperText] = React.useState(\"\")\n  const [jobQueueCount, setJobQueueCount] = React.useState(0)\n  const [statsData, setStatsData] = React.useState([])\n  const [statsDescription, setStatsDescription] = React.useState(\"\")\n  const [hashDoneSnackbarOpen, setHashDoneSnackbarOpen] = React.useState(false)\n  const [waitingForRandomData, setWaitingForRandomData] = React.useState(false)\n\n  const handleRandomData = (opts) => {\n    const {byteCount, buffer} = opts\n    console.log(byteCount)\n    console.log(buffer)\n    setWaitingForRandomData(false)\n    handleRandomDataToHash(buffer)\n  }\n\n  if (!hasWorkerListener) {\n    hasWorkerListener = true\n    hashWorker.addEventListener('message', (e) => {\n      const {jobQueueCount} = e.data\n      if (e.data.type === \"onRandomData\") {\n        return handleRandomData(e.data.opts)\n      }\n      if (jobQueueCount !== undefined) {\n        setHashDoneSnackbarOpen(jobQueueCount === 0)\n        setJobQueueCount(jobQueueCount)\n      }\n    })\n  }\n\n  const handleTextChange = event => {\n    const text = event.target.value\n    setTextToHash(text)\n    setBufferToHash(bufferFromText(text))\n    const byteCountFormatted = formatBytes(byteLength(text))\n    setTextToHashHelperText(byteCountFormatted)\n    setStatsDescription(`${formatBytes(byteLength(text))} of text`)\n  }\n  const handleFilterValueChange = (filterText) => {\n    setFilterText(filterText)\n  }\n\n  const handleFileChange = fileInfo => {\n    const {fileBuffer, fileName} = fileInfo\n    setBufferToHash(Buffer.from(fileBuffer))\n    setFileToHashHelperText(`${fileName}: ${formatBytes(fileBuffer.byteLength)}`)\n    setStatsDescription(`${formatBytes(fileBuffer.byteLength)} of a file`)\n  }\n\n  /**\n   * hashInfoData: {\n   *   hashingFunctionName: \"sha1\",\n   *   \"duration (s)\": 12,\n   *   etc...\n   * }\n   */\n\n  const handleHashInfoData = (hashInfoData) => {\n    const currentHashInfoRow = statsData.findIndex((value, index, obj) => {\n      return value.hashingFunctionName === hashInfoData.hashingFunctionName\n    })\n    if (currentHashInfoRow < 0) {\n      statsData.push(hashInfoData)\n      return\n    }\n    statsData.splice(currentHashInfoRow, 1, hashInfoData)\n    setStatsData(statsData)\n  }\n\n  const handleRandomDataToHash = (dataBuffer) => {\n    setBufferToHash(dataBuffer)\n    setStatsDescription(`${formatBytes(dataBuffer.byteLength)} of random data`)\n  }\n\n  const isLoading = jobQueueCount > 0\n\n  const handleHashDoneSnackbarClose = () => {\n    setHashDoneSnackbarOpen(false)\n  }\n\n  const handleRandomDataButtonPressed = (byteCount) => {\n    setWaitingForRandomData(true)\n    hashWorker.postMessage({\n      type: 'onGetRandomData',\n      opts: {\n        byteCount\n      }\n    })\n  }\n\n  const hashesTitle = isLoading ? `Hashing ${statsDescription} | Job queue count: ${jobQueueCount}` : `Hashes for ${statsDescription || 'null value'}`\n\n  return (\n    <div className=\"App\">\n      <CssBaseline/>\n      <PrimarySearchAppBar onFilterValueChange={handleFilterValueChange}/>\n      <Container maxWidth=\"md\">\n        <br/>\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Text To Hash\"\n          multiline\n          rows=\"4\"\n          value={textToHash}\n          onChange={handleTextChange}\n          variant=\"outlined\"\n          helperText={textToHashHelperText}\n          fullWidth\n        />\n\n        <OrBreak/>\n\n        <Dropzone onDrop={(acceptedFiles) => {\n          acceptedFiles.forEach((file) => {\n            const reader = new FileReader()\n            reader.onload = () => {\n              handleFileChange({\n                fileBuffer: reader.result,\n                fileName: file.name\n              })\n            }\n            reader.readAsArrayBuffer(file)\n          })\n        }}>\n          {({getRootProps, getInputProps}) => (\n            <section style={{border: 'dashed gray', borderColor: (fileToHashHelperText ? 'blue' : 'gray')}}>\n              <div {...getRootProps()}>\n                <input {...getInputProps()} />\n                <p style={{fontSize: 30, paddingTop: 50, margin: 0, paddingLeft: 30, paddingRight: 30}}>Drag 'n' drop a\n                  file here, or click to select a file</p>\n                <p style={{fontSize: 30, margin: 4}}>(hashing is done locally)</p>\n                {fileToHashHelperText && <Chip\n                  icon={<DescriptionIcon></DescriptionIcon>}\n                  label={fileToHashHelperText}\n                  clickable\n                  color=\"primary\"\n                  style={{marginTop: 20}}\n                />}\n                <div style={{height: 50}}></div>\n              </div>\n            </section>\n          )}\n        </Dropzone>\n\n        <OrBreak/>\n\n        <Typography variant={'h4'}>\n          Random Data\n        </Typography>\n\n        <HashRandomDataButtons onDataToHash={handleRandomDataButtonPressed}/>\n\n        {waitingForRandomData && <Typography variant={'h5'} style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          margin: 12,\n          textAlign: \"center\"\n        }}>\n          Generating Random Data\n          <CircularProgress\n            style={{\n              alignSelf: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              flexDirection: 'column',\n              justifyContent: 'center',\n              margin: 8\n            }}/>\n        </Typography>}\n\n        <OrBreak/>\n\n        <Typography variant={'h5'} style={{margin: 8}}>\n          Custom Size Random Data\n        </Typography>\n        <MBToHashInput onDataToHash={handleRandomDataButtonPressed}/>\n\n        <div style={{height: '3em'}}/>\n\n        <Typography variant={'h3'}>\n          {hashesTitle}\n        </Typography>\n        {isLoading && <CircularProgress style={{margin: 20}}/>}\n\n        <HashInfos\n          bufferToHash={bufferToHash}\n          filterText={filterText}\n          onHashInfoData={handleHashInfoData}\n        />\n\n        <Stats\n          statsDescription={statsDescription}\n          data={statsData}\n          isLoading={isLoading}\n        />\n\n        <Snackbar open={hashDoneSnackbarOpen} autoHideDuration={3000} onClose={handleHashDoneSnackbarClose}>\n          <Alert onClose={handleHashDoneSnackbarClose} severity=\"success\">\n            Done hashing!\n          </Alert>\n        </Snackbar>\n\n      </Container>\n\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport './App.css';\nimport TextField from '@material-ui/core/TextField'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nfunction metricsFromInfo(durationMS, byteCount) {\n  const nanoseconds = durationMS * 1000000\n  const nsPerByte = nanoseconds / byteCount\n  const megabytes = byteCount / 1000000\n  const seconds = durationMS / 1000\n  const MBperSecond = megabytes / seconds\n\n  return {\n    \"duration (s)\": seconds,\n    \"MB/s\": MBperSecond,\n    \"ns/byte\": nsPerByte\n  }\n}\n\nfunction textFromMetrics(metrics) {\n  const durationSeconds = metrics[\"duration (s)\"]\n  const MBperSecond = metrics[\"MB/s\"]\n  const nsPerByte = metrics[\"ns/byte\"]\n\n  const hashDurationText = (durationSeconds * 1000).toLocaleString(undefined, {\n    maximumFractionDigits: 3\n  })\n  const nsPerByteText = nsPerByte.toLocaleString(undefined, {\n    maximumFractionDigits: 3\n  })\n  const MBperSecondText = MBperSecond.toLocaleString(undefined, {\n    maximumFractionDigits: 3\n  })\n  return `Took ${hashDurationText} ms | ${nsPerByteText} ns/byte | ${MBperSecondText}MB/s`\n}\n\nexport function HashInfoBox(props) {\n  const {bufferToHash, hashingFunctionName, worker, hashDefinitionIndex, onHashInfoData} = props\n\n  const [hashText, setHashText] = React.useState(\"\")\n  const [hasWorkerListener, setHasWorkerListener] = React.useState(false)\n\n  const [willHashBuffer, setWillHashBuffer] = React.useState(\"\")\n  const [didHashBuffer, setDidHashBuffer] = React.useState(\"\")\n\n  const [bufferThatWasHashed, setBufferThatWasHashed] = React.useState(null)\n  const [helperText, setHelperText] = React.useState(\"\")\n\n  if(bufferThatWasHashed === null\n  || bufferThatWasHashed.length !== bufferToHash.length) {\n    setBufferThatWasHashed(bufferToHash)\n    setWillHashBuffer(bufferToHash)\n    worker.postMessage({\n      hashDefinitionIndex,\n      bufferToHash,\n      hashingFunctionName\n    })\n    if(!hasWorkerListener) {\n      setHasWorkerListener(true)\n      worker.addEventListener('message', e => {\n        const workerData = e.data\n\n        if(workerData.hashingFunctionName !== hashingFunctionName) {\n          return\n        }\n\n        const metrics = metricsFromInfo(workerData.hashDuration, workerData.bufferToHash.length)\n        const hashDurationText = textFromMetrics(metrics)\n        setHashText(workerData.hash)\n        setDidHashBuffer(workerData.bufferToHash)\n        setHelperText(hashDurationText)\n\n        onHashInfoData({\n          hashingFunctionName,\n          ...metrics\n        })\n      })\n    }\n  }\n\n  const isLoading = willHashBuffer.length !== didHashBuffer.length // FIXME; compare buffers\n\n  return (\n    <div key={hashingFunctionName} style={{marginTop: '2em', marginBottom: '2em', position: 'relative'}}>\n      {isLoading && <div style={{position: 'absolute', justifyContent: 'center', width: '100%', height: '100%'}}>\n        <CircularProgress style={{alignSelf: 'center', alignItems: 'center', display: 'flex', flexDirection: 'column', justifyContent: 'center', flexGrow: 1, margin: 'auto', height: '100%'}} />\n      </div>}\n      <TextField\n        id=\"outlined-multiline-static\"\n        label={hashingFunctionName}\n        multiline\n        rows=\"4\"\n        value={hashText}\n        variant=\"outlined\"\n        helperText={helperText}\n        fullWidth\n        style={{position: 'relative'}}\n      />\n    </div>\n  )\n}\n","import {blake2bHex} from 'blakejs'\nimport md5 from 'md5'\nimport multihashing from 'multihashing-async'\n\nfunction multihashingBufferToArrayBuffer(multihashingBuffer) {\n  const arrayBuffer = new ArrayBuffer(multihashingBuffer.length)\n  const uint8Array = new Uint8Array(arrayBuffer)\n  multihashingBuffer.copy(uint8Array)\n  return arrayBuffer\n}\n\nconst multihashingFunctionNames = [\n  'sha1',\n  'sha2-256',\n  'sha2-512',\n  'dbl-sha2-256',\n  'sha3-224',\n  'sha3-256',\n  'sha3-384',\n  'sha3-512',\n  'shake-128',\n  'shake-256',\n  'keccak-224',\n  'keccak-256',\n  'keccak-384',\n  'keccak-512',\n  'murmur3-128',\n  'murmur3-32',\n]\n\n// from https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\nfunction hashToHex(buffer) {\n  const hexCodes = []\n\n  const view = new DataView(buffer)\n\n  for (let i = 0; i < view.byteLength; i += 4) {\n    const value = view.getUint32(i)\n    const stringValue = value.toString(16)\n    const padding = '00000000'\n    const paddedValue = (padding + stringValue).slice(-padding.length)\n    hexCodes.push(paddedValue)\n  }\n\n  return hexCodes.join('')\n}\n\nexport const hashFunctionProps = [\n  {\n    hashingFunctionName: \"SHA-1 (window.crypto)\",\n    hashingFunctionAsync: (bufferToHash) => {\n      return crypto.subtle.digest('SHA-1', bufferToHash).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'SHA-256 (window.crypto)',\n    hashingFunctionAsync: (buffer) => {\n      return crypto.subtle.digest('SHA-256', buffer).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'SHA-384 (window.crypto)',\n    hashingFunctionAsync: function (buffer) {\n      return crypto.subtle.digest('SHA-384', buffer).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'SHA-512 (window.crypto)',\n    hashingFunctionAsync: function (buffer) {\n      return crypto.subtle.digest('SHA-512', buffer).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  ...multihashingFunctionNames.map((hashingFunctionName) => {\n    return {\n      hashingFunctionName: `${hashingFunctionName} (multihashing)`,\n      hashingFunctionAsync: async function (buffer) {\n        return hashToHex (multihashingBufferToArrayBuffer(await multihashing.digest(buffer, hashingFunctionName)))\n      }\n    }\n  })\n]\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"a5eb0fc14d7c8c246604.worker.js\");\n};","import React from 'react'\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, LabelList, Label\n} from 'recharts'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Typography from '@material-ui/core/Typography'\nimport {Paper} from '@material-ui/core'\n\nconst chartConfigs = [\n  {\n    name: \"Duration (less is better)\",\n    dataKey: \"duration (s)\"\n  },\n  {\n    name: \"Throughput (more is better)\",\n    dataKey: \"MB/s\"\n  },\n  {\n    name: \"Throughput Inverse (less is better)\",\n    dataKey: \"ns/byte\"\n  }\n]\n\nfunction chartPropsFromStatsProps(statsProps) {\n  return chartConfigs.map(chartConfig => {\n    const {name, dataKey} = chartConfig\n    const chartData = statsProps.filter(statsProp => {\n      return !!statsProp[dataKey]\n    }).map(statsProp => {\n      return {\n        \"Hashing Function\": statsProp.hashingFunctionName,\n        [dataKey]: statsProp[dataKey]\n      }\n    })\n    return {\n      name,\n      dataKey,\n      chartData\n    }\n  })\n}\n\nfunction ChartComponentsFromChartProps(props) {\n  const {chartProps, isLoading} = props\n\n  const width = 360\n  const maxWidth = width + 100\n\n  return chartProps.map(chartProp => {\n    return (\n      <div key={chartProp.name} style={{display: 'flex', flexDirection: 'column', alignItems: 'center', position: 'relative', margin: 40, maxWidth}}>\n        {isLoading && <div style={{position: 'absolute', justifyContent: 'center', width: '100%', height: '100%', backgroundColor: \"rgba(128, 128, 128, 0.1)\", zIndex: 10}}>\n          <CircularProgress\n            color={'secondary'}\n            style={{alignSelf: 'center', alignItems: 'center', display: 'flex', flexDirection: 'column', justifyContent: 'center', flexGrow: 1, margin: 'auto', height: '100%'}} />\n        </div>}\n\n        <Paper style={{display: \"flex\", flexDirection: \"column\", padding: 20, margin: 20, alignItems: \"center\"}}>\n          <Typography variant=\"h4\" style={{marginBottom: 20}}>\n            {chartProp.name}\n          </Typography>\n            <BarChart\n              width={width}\n              height={1000}\n              data={chartProp.chartData}\n              layout=\"vertical\"\n              margin={{ top: 20, right: 20, bottom: 20, left: 50 }}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\"/>\n              <XAxis type={\"number\"}>\n              </XAxis>\n              <YAxis dataKey=\"Hashing Function\" type=\"category\" />\n              <Tooltip/>\n              <Legend/>\n              <Bar dataKey={chartProp.dataKey} fill=\"#8884d8\">\n              </Bar>\n            </BarChart>\n        </Paper>\n\n      </div>\n    )\n  })\n}\n\n/**\n * props: {\n *   data: [\n *     {\n *       hashingFunctionName: 'sha-1',\n *         \"duration (s)\": 12,\n *         \"MB/s\": 230,\n *         etc.\n *     }, ...\n *   ]\n * }\n * */\nexport default function Stats(props) {\n  const {data, statsDescription, isLoading} = props\n  const chartProps = chartPropsFromStatsProps(data)\n\n  return (\n    <section style={{textAlign: \"center\"}}>\n      <Typography variant=\"h2\">\n        Stats for hashing {statsDescription || 'null value'}\n      </Typography>\n\n      <div style={{display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\", justifyContent: \"center\"}}>\n        <ChartComponentsFromChartProps chartProps={chartProps} isLoading={isLoading}/>\n      </div>\n    </section>\n  )\n}\n","import React, {useState} from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport {formatBytes} from './Util'\n\nexport function MBToHashInput(props) {\n  const {onDataToHash} = props\n\n  const [mbToHash, setMBToHash] = useState(NaN)\n  const [textToHashHelperText, setTextToHashHelperText] = React.useState(formatBytes(0))\n\n  const handleMBToHashText = (e) => {\n    try {\n      const mbToHash = parseInt(e.target.value)\n      const bytesToHash = mbToHash * 1e6\n      setMBToHash(mbToHash)\n      setTextToHashHelperText(formatBytes(bytesToHash))\n    } catch (e) {\n      setMBToHash(NaN)\n      setTextToHashHelperText(\"N/A\")\n    }\n  }\n\n  return (\n    <section style={{display: 'flex', justifyContent: 'center', flexWrap: 'wrap'}}>\n      <TextField\n        id=\"outlined-multiline-static\"\n        label=\"MB To Hash\"\n        rows=\"1\"\n        onChange={handleMBToHashText}\n        variant=\"outlined\"\n        helperText={textToHashHelperText}\n        fullWidth\n      />\n      <Button\n        variant={'contained'}\n        color={'primary'}\n        disabled={isNaN(mbToHash)}\n        style={{margin: 8}}\n        onClick={() => {\n          onDataToHash(mbToHash * 1e6)\n        }}\n      >\n        Hash {mbToHash} MB\n      </Button>\n    </section>\n  )\n}\n","\n\n// https://en.wikipedia.org/wiki/Orders_of_magnitude_(data)\n// [1000^value, prefix]\nconst byteFormatterList = [\n  [8, 'Y'],\n  [7, 'Z'],\n  [6, 'E'],\n  [5, 'P'],\n  [4, 'T'],\n  [3, 'G'],\n  [2, 'M'],\n  [1, 'k'],\n].map((byteArgs) => {\n  return {\n    minValue: Math.pow(1000, byteArgs[0]),\n    prefix: byteArgs[1]\n  }\n})\n\n// https://en.wikipedia.org/wiki/Orders_of_magnitude_(data)\n// converts the input (number of bytes) to a human readable number, like 500 bytes or 3.5 MB\nexport function formatBytes(numberOfBytes) {\n  for (const byteFormat of byteFormatterList) {\n    if (numberOfBytes >= byteFormat.minValue) {\n      return `${(numberOfBytes / byteFormat.minValue).toLocaleString(undefined, {\n        maximumFractionDigits: 3\n      })} ${byteFormat.prefix}B`\n    }\n  }\n  return `${numberOfBytes} bytes`\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}