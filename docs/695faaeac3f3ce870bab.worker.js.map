{"version":3,"sources":["../webpack/bootstrap","../node_modules/blakejs/util.js","../node_modules/charenc/charenc.js","../node_modules/blakejs/index.js","../node_modules/md5/md5.js","../node_modules/blakejs/blake2b.js","../node_modules/buffer/index.js","../node_modules/webpack/buildin/global.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/blakejs/blake2s.js","../node_modules/crypt/crypt.js","../node_modules/is-buffer/index.js","HashFunctionDefinitions.js","HashWorker.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","uint32ToHex","val","toString","substring","normalizeInput","input","ret","Uint8Array","Buffer","Error","from","toHex","bytes","Array","map","join","debugPrint","label","arr","size","msg","length","toUpperCase","console","log","testSpeed","hashFn","N","M","startMs","Date","getTime","genMs","hashHex","hashMs","ms","Math","round","charenc","utf8","stringToBytes","str","bin","unescape","encodeURIComponent","bytesToString","decodeURIComponent","escape","push","charCodeAt","String","fromCharCode","b2b","require","b2s","blake2b","blake2bHex","blake2bInit","blake2bUpdate","blake2bFinal","blake2s","blake2sHex","blake2sInit","blake2sUpdate","blake2sFinal","crypt","isBuffer","md5","message","options","constructor","encoding","slice","isArray","bytesToWords","a","b","FF","_ff","GG","_gg","HH","_hh","II","_ii","aa","bb","cc","dd","endian","x","_blocksize","_digestsize","undefined","digestbytes","wordsToBytes","asBytes","asString","bytesToHex","util","ADD64AA","v","o0","o1","ADD64AC","b0","b1","B2B_GET32","B2B_G","ix","iy","x0","x1","y0","y1","xor0","xor1","BLAKE2B_IV32","Uint32Array","SIGMA82","blake2bCompress","ctx","last","h","outlen","keylen","out","output","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","__proto__","arg","encodingOrOffset","this","allocUnsafe","TypeError","ArrayBuffer","array","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","string","isEncoding","actual","write","fromString","obj","len","checked","copy","buffer","type","data","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","fromByteArray","min","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","apply","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","global","foo","subarray","e","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","y","concat","list","pos","swap16","swap32","swap64","arguments","equals","inspect","max","match","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","replace","stringtrim","base64clean","src","dst","g","Function","window","b64","lens","getLens","validLen","placeHoldersLen","tmp","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","B2S_GET32","B2S_G","ROTR32","BLAKE2S_IV","SIGMA","blake2sCompress","base64map","rotl","rotr","randomBytes","random","words","hex","hexToBytes","bytesToBase64","triplet","charAt","imod4","isSlowBuffer","hashToHex","hexCodes","view","DataView","paddedValue","getUint32","hashFunctionProps","hashingFunctionName","hashingFunctionAsync","bufferToHash","crypto","subtle","digest","then","hash","Promise","resolve","jobQueue","currentJob","notifyJobQueueLengthChanged","self","postMessage","jobQueueCount","dequeueJob","splice","job","hashDefinitionIndex","hashingStartDate","performance","now","hashDuration","executeJobAsync","addEventListener","messageData"],"mappings":"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","file":"695faaeac3f3ce870bab.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/multi-hash/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","var ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  var ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (input instanceof Buffer) {\n    ret = new Uint8Array(input)\n  } else if (typeof (input) === 'string') {\n    ret = new Uint8Array(Buffer.from(input, 'utf8'))\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map.call(bytes, function (n) {\n    return (n < 16 ? '0' : '') + n.toString(16)\n  }).join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  var msg = '\\n' + label + ' = '\n  for (var i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  var startMs = new Date().getTime()\n\n  var input = new Uint8Array(N)\n  for (var i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  var genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (i = 0; i < M; i++) {\n    var hashHex = hashFn(input)\n    var hashMs = new Date().getTime()\n    var ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(Math.round(N / (1 << 20) / (ms / 1000) * 100) / 100 + ' MB PER SECOND')\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n","var b2b = require('./blake2b')\nvar b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n","(function(){\r\n  var crypt = require('crypt'),\r\n      utf8 = require('charenc').utf8,\r\n      isBuffer = require('is-buffer'),\r\n      bin = require('charenc').bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message))\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  var o0 = v[a] + v[b]\n  var o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  var o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  var o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return (arr[i] ^\n  (arr[i + 1] << 8) ^\n  (arr[i + 2] << 16) ^\n  (arr[i + 3] << 24))\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  var x0 = m[ix]\n  var x1 = m[ix + 1]\n  var y0 = m[iy]\n  var y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  var xor0 = v[d] ^ v[a]\n  var xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nvar BLAKE2B_IV32 = new Uint32Array([\n  0xF3BCC908, 0x6A09E667, 0x84CAA73B, 0xBB67AE85,\n  0xFE94F82B, 0x3C6EF372, 0x5F1D36F1, 0xA54FF53A,\n  0xADE682D1, 0x510E527F, 0x2B3E6C1F, 0x9B05688C,\n  0xFB41BD6B, 0x1F83D9AB, 0x137E2179, 0x5BE0CD19\n])\n\nvar SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0,\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nvar SIGMA82 = new Uint8Array(SIGMA8.map(function (x) { return x * 2 }))\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nvar v = new Uint32Array(32)\nvar m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  var i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\nfunction blake2bInit (outlen, key) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n\n  // state, 'param block'\n  var ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize hash state\n  for (var i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i]\n  }\n  var keylen = key ? key.length : 0\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 128) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2b (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2bInit(outlen, key)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2bHex (input, key, outlen) {\n  var output = blake2b(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nvar util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nvar BLAKE2S_IV = new Uint32Array([\n  0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n  0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19])\n\nvar SIGMA = new Uint8Array([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3,\n  11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4,\n  7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8,\n  9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13,\n  2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9,\n  12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11,\n  13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10,\n  6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5,\n  10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0])\n\n// Compression function. \"last\" flag indicates last block\nvar v = new Uint32Array(16)\nvar m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  var i = 0\n  for (i = 0; i < 8; i++) { // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= (ctx.t / 0x100000000) // high 32 bits\n  if (last) { // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) { // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  var keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  var ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint32Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (var i = 0; i < input.length; i++) {\n    if (ctx.c === 64) { // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) { // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  var out = new Uint8Array(ctx.outlen)\n  for (var i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xFF\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  var ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  var output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n","(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","import {blake2bHex} from 'blakejs'\nimport md5 from 'md5'\n\n// from https://developer.mozilla.org/en-US/docs/Web/API/SubtleCrypto/digest\nfunction hashToHex(buffer) {\n  const hexCodes = []\n  const view = new DataView(buffer)\n\n  for (let i = 0; i < view.byteLength; i += 4) {\n    const value = view.getUint32(i)\n    const stringValue = value.toString(16)\n    const padding = '00000000'\n    const paddedValue = (padding + stringValue).slice(-padding.length)\n    hexCodes.push(paddedValue)\n  }\n\n  return hexCodes.join('')\n}\n\nexport const hashFunctionProps = [\n  {\n    hashingFunctionName: \"SHA-1\",\n    hashingFunctionAsync: (bufferToHash) => {\n      return crypto.subtle.digest('SHA-1', bufferToHash).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'SHA-256',\n    hashingFunctionAsync: (buffer) => {\n      return crypto.subtle.digest('SHA-256', buffer).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'SHA-384',\n    hashingFunctionAsync: function (buffer) {\n      return crypto.subtle.digest('SHA-384', buffer).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'SHA-512',\n    hashingFunctionAsync: function (buffer) {\n      return crypto.subtle.digest('SHA-512', buffer).then(hash => {\n        return hashToHex(hash)\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'blake2b',\n    hashingFunctionAsync: function (buffer) {\n      return new Promise((resolve) => {\n        resolve(blake2bHex(buffer, null, 64))\n      })\n    }\n  },\n  {\n    hashingFunctionName: 'md5',\n    hashingFunctionAsync: function (buffer) {\n      return new Promise((resolve) => {\n        resolve(md5(buffer))\n      })\n    }\n  },\n]\n","import {hashFunctionProps} from './HashFunctionDefinitions'\n\nconst jobQueue = []\nlet currentJob = null\n\nfunction notifyJobQueueLengthChanged() {\n  self.postMessage({\n    jobQueueCount: jobQueue.length + (currentJob && 1 || 0)\n  })\n}\n\nfunction pushJob(messageData) {\n  jobQueue.push(messageData)\n  notifyJobQueueLengthChanged()\n  if(!currentJob) {\n    dequeueJob()\n  }\n}\n\nfunction executeJobAsync(job) {\n  const {hashDefinitionIndex, bufferToHash, hashingFunctionName} = job\n  const hashFunctionProp = hashFunctionProps[hashDefinitionIndex]\n  const hashingFunctionAsync = hashFunctionProp.hashingFunctionAsync\n  const hashingStartDate = performance.now()\n\n  hashingFunctionAsync(bufferToHash).then((hash) => {\n    const hashingEndDate = performance.now()\n    const hashDuration = hashingEndDate - hashingStartDate\n\n    self.postMessage({hash, bufferToHash, hashingFunctionName, hashDuration})\n    currentJob = null\n    notifyJobQueueLengthChanged()\n    dequeueJob()\n  })\n}\n\nfunction dequeueJob() {\n  if(jobQueue.length === 0) {\n    notifyJobQueueLengthChanged()\n    return\n  }\n  currentJob = jobQueue.splice(0, 1)[0]\n  executeJobAsync(currentJob)\n}\n\nself.addEventListener('message', (e) => {\n  pushJob(e.data)\n})\n\n// export default {}\n"],"sourceRoot":""}